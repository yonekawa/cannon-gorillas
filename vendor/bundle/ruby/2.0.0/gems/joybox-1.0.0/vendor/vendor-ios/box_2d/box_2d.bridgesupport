<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='kDynamicBodyType' value='2'/>
<enum name='kKinematicBodyType' value='1'/>
<enum name='kStaticBodyType' value='0'/>
<class name='B2DBody'>
<method selector='addFixtureForShape:friction:restitution:density:isSensor:'>
<arg name='shape' index='0' declared_type='B2DShape*' type='@'/>
<arg name='friction' index='1' declared_type='CGFloat' type='f'/>
<arg name='restitution' index='2' declared_type='CGFloat' type='f'/>
<arg name='density' index='3' declared_type='CGFloat' type='f'/>
<arg name='isSensor' index='4' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='angle'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='applyForce:atLocation:asImpulse:'>
<arg name='force' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='location' index='1' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='asImpulse' index='2' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='applyTorque:asImpulse:'>
<arg name='torque' index='0' declared_type='CGFloat' type='f'/>
<arg name='impulse' index='1' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='body'>
<retval declared_type='int*' type='^i'/>
</method>
<method selector='center'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='initWithBody:'>
<arg name='boxBody' index='0' declared_type='id' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isSleepingAllowed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='position'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='setBody:'>
<arg name='body' index='0' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setPosition:'>
<arg name='position' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSleepingAllowed:'>
<arg name='isSleepingAllowed' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='B2DCircleShape'>
<method selector='initWithRadius:'>
<arg name='radius' index='0' declared_type='CGFloat' type='f'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='B2DContactListener'>
<method selector='beginContact'>
<retval declared_type='beginContactCallback' type='@?' function_pointer='true'>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='contactListener'>
<retval declared_type='int*' type='^i'/>
</method>
<method selector='endContact'>
<retval declared_type='endContactCallback' type='@?' function_pointer='true'>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='B2DBody*' type='@'/>
<retval declared_type='void' type='v'/>
</retval>
</method>
<method selector='setBeginContact:'>
<arg name='beginContact' index='0' declared_type='beginContactCallback' type='@?' function_pointer='true'>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContactListener:'>
<arg name='contactListener' index='0' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setEndContact:'>
<arg name='endContact' index='0' declared_type='endContactCallback' type='@?' function_pointer='true'>
<arg declared_type='B2DBody*' type='@'/>
<arg declared_type='B2DBody*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='B2DEdgeShape'>
<method selector='initWithStartPoint:endPoint:'>
<arg name='startPoint' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='endPoint' index='1' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='B2DPolygonShape'>
<method selector='initWithBoxSize:'>
<arg name='boxSize' index='0' declared_type='CGSize' type='{CGSize=ff}'/>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='B2DShape'>
<method selector='setShape:'>
<arg name='shape' index='0' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shape'>
<retval declared_type='int*' type='^i'/>
</method>
</class>
<class name='B2DWorld'>
<method selector='addContactListener:'>
<arg name='contactListener' index='0' declared_type='B2DContactListener*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='allowsSleeping'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='continuousPhysics'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createBodyInPosition:type:'>
<arg name='position' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<arg name='bodyType' index='1' declared_type='B2DBodyTypes' type='i'/>
<retval declared_type='B2DBody*' type='@'/>
</method>
<method selector='gravity'>
<retval declared_type='CGPoint' type='{CGPoint=ff}'/>
</method>
<method selector='removeBody:'>
<arg name='body' index='0' declared_type='B2DBody*' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAllowsSleeping:'>
<arg name='allowsSleeping' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setContinuousPhysics:'>
<arg name='continuousPhysics' index='0' declared_type='BOOL' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGravity:'>
<arg name='gravity' index='0' declared_type='CGPoint' type='{CGPoint=ff}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setWorld:'>
<arg name='world' index='0' declared_type='int*' type='^i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='stepWithDelta:velocityInteractions:positionInteractions:'>
<arg name='delta' index='0' declared_type='CGFloat' type='f'/>
<arg name='velocityInteractions' index='1' declared_type='int' type='i'/>
<arg name='positionInteractions' index='2' declared_type='int' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='world'>
<retval declared_type='int*' type='^i'/>
</method>
</class>
</signatures>
