<?xml version='1.0'?>
<signatures version='1.0'>
<enum name='kDynamicBodyType' value='2'/>
<enum name='kKinematicBodyType' value='1'/>
<enum name='kStaticBodyType' value='0'/>
<class name='B2DBody'>
<method selector='addFixtureForShape:friction:restitution:density:isSensor:'>
<arg type='@' name='shape' declared_type='B2DShape*' index='0'/>
<arg type='f' name='friction' type64='d' declared_type='CGFloat' index='1'/>
<arg type='f' name='restitution' type64='d' declared_type='CGFloat' index='2'/>
<arg type='f' name='density' type64='d' declared_type='CGFloat' index='3'/>
<arg type='B' name='isSensor' declared_type='BOOL' index='4'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='angle'>
<retval type='f' type64='d' declared_type='CGFloat'/>
</method>
<method selector='applyForce:atLocation:asImpulse:'>
<arg type='{CGPoint=ff}' name='force' type64='{CGPoint=dd}' declared_type='CGPoint' index='0'/>
<arg type='{CGPoint=ff}' name='location' type64='{CGPoint=dd}' declared_type='CGPoint' index='1'/>
<arg type='B' name='asImpulse' declared_type='BOOL' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='applyTorque:asImpulse:'>
<arg type='f' name='torque' type64='d' declared_type='CGFloat' index='0'/>
<arg type='B' name='impulse' declared_type='BOOL' index='1'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='body'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='center'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='initWithBody:'>
<arg type='@' name='boxBody' declared_type='id' index='0'/>
<retval type='@' declared_type='id'/>
</method>
<method selector='isSleepingAllowed'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='position'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='setBody:'>
<arg type='^i' name='body' declared_type='int*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setPosition:'>
<arg type='{CGPoint=ff}' name='position' type64='{CGPoint=dd}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setSleepingAllowed:'>
<arg type='B' name='isSleepingAllowed' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DCircleShape'>
<method selector='initWithRadius:'>
<arg type='f' name='radius' type64='d' declared_type='CGFloat' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DContactListener'>
<method selector='beginContact'>
<retval type='@?' declared_type='beginContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='contactListener'>
<retval type='^i' declared_type='int*'/>
</method>
<method selector='endContact'>
<retval type='@?' declared_type='endContactCallback' function_pointer='true'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</retval>
</method>
<method selector='setBeginContact:'>
<arg type='@?' name='beginContact' declared_type='beginContactCallback' function_pointer='true' index='0'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<arg type='B' declared_type='BOOL'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContactListener:'>
<arg type='^i' name='contactListener' declared_type='int*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setEndContact:'>
<arg type='@?' name='endContact' declared_type='endContactCallback' function_pointer='true' index='0'>
<arg type='@' declared_type='B2DBody*'/>
<arg type='@' declared_type='B2DBody*'/>
<retval type='v' declared_type='void'/>
</arg>
<retval type='v' declared_type='void'/>
</method>
</class>
<class name='B2DEdgeShape'>
<method selector='initWithStartPoint:endPoint:'>
<arg type='{CGPoint=ff}' name='startPoint' type64='{CGPoint=dd}' declared_type='CGPoint' index='0'/>
<arg type='{CGPoint=ff}' name='endPoint' type64='{CGPoint=dd}' declared_type='CGPoint' index='1'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DPolygonShape'>
<method selector='initWithBoxSize:'>
<arg type='{CGSize=ff}' name='boxSize' type64='{CGSize=dd}' declared_type='CGSize' index='0'/>
<retval type='@' declared_type='id'/>
</method>
</class>
<class name='B2DShape'>
<method selector='setShape:'>
<arg type='^i' name='shape' declared_type='int*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='shape'>
<retval type='^i' declared_type='int*'/>
</method>
</class>
<class name='B2DWorld'>
<method selector='addContactListener:'>
<arg type='@' name='contactListener' declared_type='B2DContactListener*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='allowsSleeping'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='continuousPhysics'>
<retval type='B' declared_type='BOOL'/>
</method>
<method selector='createBodyInPosition:type:'>
<arg type='{CGPoint=ff}' name='position' type64='{CGPoint=dd}' declared_type='CGPoint' index='0'/>
<arg type='i' name='bodyType' declared_type='B2DBodyTypes' index='1'/>
<retval type='@' declared_type='B2DBody*'/>
</method>
<method selector='gravity'>
<retval type='{CGPoint=ff}' type64='{CGPoint=dd}' declared_type='CGPoint'/>
</method>
<method selector='removeBody:'>
<arg type='@' name='body' declared_type='B2DBody*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setAllowsSleeping:'>
<arg type='B' name='allowsSleeping' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setContinuousPhysics:'>
<arg type='B' name='continuousPhysics' declared_type='BOOL' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setGravity:'>
<arg type='{CGPoint=ff}' name='gravity' type64='{CGPoint=dd}' declared_type='CGPoint' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='setWorld:'>
<arg type='^i' name='world' declared_type='int*' index='0'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='stepWithDelta:velocityInteractions:positionInteractions:'>
<arg type='f' name='delta' type64='d' declared_type='CGFloat' index='0'/>
<arg type='i' name='velocityInteractions' declared_type='int' index='1'/>
<arg type='i' name='positionInteractions' declared_type='int' index='2'/>
<retval type='v' declared_type='void'/>
</method>
<method selector='world'>
<retval type='^i' declared_type='int*'/>
</method>
</class>
</signatures>
